<?xml version="1.0" encoding="utf-8"?>

<!--
 Stores OpenID Connect client configuration. This should not be used in production without obfuscation.
 If you want to hide your keys, you should obfuscate them using ProGuard (with added manual obfuscation),
 DexGuard or something else.

 The strings in this file are not to be translated.
-->
<resources>
    <!-- OIDC client information you received from your OIDC provider -->
    <string name="oidc_clientId">MyClientID</string>
    <string name="oidc_clientSecret">ItsPassword</string>

    <!-- This URL doesn't really have a use with native apps and basically just signifies the end of
     the authorisation process. It doesn't have to be a real URL, but it does have to be the same
     URL that is registered with your provider. -->
    <string name="oidc_redirectUrl">app://oidcsample.lnikkila.com/end</string>

    <!-- The `offline_access` scope enables us to request Refresh Tokens, so we don't have to ask
    the user to authorise us again every time the tokens expire. Some providers might have an
    `offline` scope instead. If you get an `invalid_scope` error when trying to authorise the app,
    try changing it to `offline`. -->
    <string-array name="oidc_scopes">
        <item>openid</item>
        <item>profile</item>
        <item>offline_access</item>
    </string-array>

    <!-- The authorization flow type that determine the response_type authorization request should
    use. It should be one of the supported flows Code, Implicit or Hybrid. Password is supported but
    is not suppose to be an oidc flow.
    For more info see http://openid.net/specs/openid-connect-core-1_0.html#Authentication -->
    <string name="oidc_flowType">Code</string>
</resources>